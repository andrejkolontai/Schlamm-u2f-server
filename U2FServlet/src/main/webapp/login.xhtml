<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>Insert title here</title>
	<script src="u2f-api.js"></script>
	<script>
	
		function info(msg) {
			var li = document.createElement('li');
			li.innerHTML = msg;
			document.getElementById('msg').appendChild(li);
		}
		
		function err(msg) {
			document.getElementById('err').innerHTML = msg;
		}

	
		function processSignRequest(signRequest){
			info('Insert your key and push the button');
			var keys = [];
			signRequest.keys.forEach(function(k){
				keys.push({
					keyHandle : k.keyHandle,
					version : k.version
				});
			});
			
			u2f.sign(signRequest.appId, signRequest.challenge, keys, function(response) {
				info('Got response from key');
				console.log(response);
				if (response.errorCode) {
					switch (response.errorCode){
						case u2f.ErrorCodes['OTHER_ERROR']: err('Unknown error');break;
						case u2f.ErrorCodes['BAD_REQUEST']: err('No https? Wrong appID?');break;
						case u2f.ErrorCodes['CONFIGURATION_UNSUPPORTED']: err('unsupported configuration (whatever that means)');break;
						case u2f.ErrorCodes['DEVICE_INELIGIBLE']: err('I already know that key');break;
						case u2f.ErrorCodes['TIMEOUT']: err('Timeout');break;
						default: err('Unknown Error '+response.errorCode);break;
					}
					console.log(response);
				}else{
					document.forms['loginForm']['signatureData'].value = response.signatureData;
					document.forms['loginForm']['clientData'].value = response.clientData;
					document.forms['loginForm']['keyHandle'].value = response.keyHandle;
					console.log(response);
					document.getElementById('ok').innerHTML = 'success';
					info('submitting response');
					document.forms['loginForm'].submit();
				}
			}, 30);
		}
	
		function login(){
			info("Starting Login process, request challenge from server");
			var req = new XMLHttpRequest();
			req.open("GET","LoginServlet");
			req.setRequestHeader("Accept","application/json");
			req.onreadystatechange = function(){
				if (this.readyState == 4 ) {
					switch(this.status) {
						case 200: {
							var request = JSON.parse(this.responseText);
						    info('Got challenge from server');
						    processSignRequest(request);
						    break;
						}
						case 400: {
							err('Bad request (no keys registered?)');break;
						}
						default: {
							err('Something went horribly wrong');
						}
					}
					
			    }
			};
			req.send(null);
			
		}
	</script>

</head>
<body>
	<p>
		Login
	</p>
	<div id="status">
		<ul id="msg" style="color: blue"/>
		<div id="err" style="color: red"/>
		<div id="ok" style="color: green"/>
	</div>	
	<form action="LoginServlet" method="post" id="loginForm">
		<input type="hidden" name="signatureData" value=""/>
		<input type="hidden" name="clientData" value=""/>
		<input type="hidden" name="keyHandle" value=""/>
	</form>
	
	
	<script>
		login();
	</script>
</body>
</html>